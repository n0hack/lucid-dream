---
import { twMerge } from 'tailwind-merge';
import { TRANSITION_POINT } from '@constants';
import navInfo from './navInfo';

type Props = {
  hasBg?: boolean;
};

const { hasBg = false } = Astro.props;
const { pathname } = Astro.url;
---

<nav class="pointer-events-none opacity-0 desktop:pointer-events-auto desktop:opacity-100">
  <ul class="flex gap-24pxr">
    {
      navInfo.map(({ path, name }) => (
        <li>
          <a
            class={twMerge(
              'nav-item block py-4pxr text-sm font-medium hover:text-gray-200',
              hasBg && 'hover:text-primary',
              pathname.includes(path) && 'text-primary',
            )}
            href={path}
          >
            {name}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script define:vars={{ hasBg, TRANSITION_POINT }}>
  if (hasBg) return;

  /** @type {HTMLLinkElement[]} */
  const navItems = document.querySelectorAll('.nav-item');

  window.addEventListener('scroll', () => {
    if (window.scrollY > TRANSITION_POINT) {
      navItems.forEach((navItem) => {
        navItem.classList.add('hover:text-primary');
        navItem.classList.remove('hover:text-gray-200');
      });
    } else {
      navItems.forEach((navItem) => {
        navItem.classList.add('hover:text-gray-200');
        navItem.classList.remove('hover:text-primary');
      });
    }
  });
</script>
