---
import { Card, Lazy, Pagination, Responsive, Section } from '@components/common';
import { Seo } from '@components/helper';
import { Layout } from '@components/layout';
import { StoryCategories, StoryCategory, StoryCategoryExpansionButton, StoryPageHeader } from '@components/story';
import { CATEGORY } from '@constants/post';
import { SITE_NAME } from '@constants/seo';
import { getCategoryNameFromSlug, getStoryLinkFromSlug } from '@utils/post';
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';

export const getStaticPaths = (async ({ paginate }) => {
  const storyCollection = await getCollection('story');

  return Object.keys(CATEGORY).flatMap((key) => {
    // 카테고리별 필터링 후, 날짜 내림차순으로 정렬
    const stories = (
      (key as keyof typeof CATEGORY) === 'all'
        ? storyCollection
        : storyCollection.filter((story) => story.slug.split('/')[0] === key)
    ).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    // 카테고리 배열 생성
    // ex. { name: '전체', count: 10, href: '/story/all/page/1' }
    const categories = Object.entries(CATEGORY).map(([key, value]) => ({
      name: value,
      count:
        (key as keyof typeof CATEGORY) === 'all'
          ? storyCollection.length
          : storyCollection.filter((story) => story.slug.split('/')[0] === key).length,
      href: `/story/${key}/page/1`,
    }));

    // 카테고리별 페이지네이션
    return paginate(stories, {
      pageSize: 9,
      params: { category: key },
      props: { categories },
    });
  });
}) satisfies GetStaticPaths;

const { page, categories } = Astro.props;
const { pathname } = Astro.url;

const pageTitle = `스토리 - ${SITE_NAME}`;
---

<Layout pageTitle={pageTitle} hasHeaderBackgrond>
  <Section>
    <Responsive>
      <StoryPageHeader />
      <StoryCategories>
        {categories.map((category) => <StoryCategory slot="item" pathname={pathname} {...category} client:load />)}
        <StoryCategoryExpansionButton slot="button" categories={categories} pathname={pathname} client:load />
      </StoryCategories>
      <Lazy className="mt-12 flex flex-col gap-8 md:grid md:grid-cols-2 lg:mt-16 lg:grid-cols-3">
        {
          page.data.map(({ slug, data }) => (
            <a
              href={getStoryLinkFromSlug(slug)}
              title={`${data.title} 스토리 보러가기`}
              aria-label={`${data.title} 스토리 보러가기`}
            >
              <Card
                thumbnail={data.thumbnail}
                title={data.title}
                description={data.description}
                date={data.date}
                category={getCategoryNameFromSlug(slug)}
              />
            </a>
          ))
        }
      </Lazy>
      <Pagination
        className="mt-12 lg:mt-20"
        page={page.currentPage}
        lastPage={page.lastPage}
        buttonUrlPrefix={page.url.current.replace(/\/\d+$/, '')}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        client:load
      />
    </Responsive>
  </Section>
  <Seo slot="meta" title={pageTitle} />
</Layout>

<script>
  // 현재 카테고리로 스크롤 이동
  document.querySelector('.current-category')?.scrollIntoView({ block: 'center' });
</script>
