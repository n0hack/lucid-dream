---
import type { GetStaticPaths } from 'astro';
import { MainLayout } from '@components/layout';
import { SearchHeaderSection, SearchResult, SearchResultSection } from '@components/search';
import { getCollection } from 'astro:content';
import { CATEGORY } from '@constants';

export const getStaticPaths = (async () => {
  const storyCollection = await getCollection('story');
  const tags = [...new Set(storyCollection.map((story) => story.data.tags).flat())];

  return tags.flatMap((tag) => {
    return {
      params: { tag },
      props: {
        stories: storyCollection
          .filter((story) => story.data.tags.includes(tag))
          .map((story) => ({
            item: {
              link: `/story/${story.slug.replace('/', '/post/')}`,
              ...story.data,
              category: {
                key: story.slug.split('/')[0],
                value: CATEGORY[story.slug.split('/')[0] as keyof typeof CATEGORY],
              },
            },
          })),
      },
    };
  });
}) satisfies GetStaticPaths;

const { stories } = Astro.props;
const { tag } = Astro.params;
---

<MainLayout pageTitle={`'${tag}' 태그 스토리 (｡•̀ᴗ-)✧`} headerBg>
  <SearchHeaderSection query={tag} text="태그 스토리" />
  <SearchResultSection>
    <SearchResult datas={stories} client:load />
  </SearchResultSection>
</MainLayout>
